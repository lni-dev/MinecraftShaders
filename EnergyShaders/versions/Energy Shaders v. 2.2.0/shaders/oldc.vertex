// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

// To use centroid sampling we need to have version 300 es shaders, which requires changing:
// attribute to in
// varying to out when in vertex shaders or in when in fragment shaders
// defining an out vec4 FragColor and replacing uses of gl_FragColor with FragColor
// texture2D to texture
#if __VERSION__ >= 300
#define attribute in
#define varying out

#else


#endif

uniform MAT4 WORLDVIEWPROJ;
uniform MAT4 WORLD;
uniform float RENDER_DISTANCE;
uniform vec4 FOG_COLOR;
uniform vec4 CURRENT_COLOR;

uniform highp float TIME;

attribute mediump vec4 POSITION;
attribute vec4 COLOR;

varying vec4 color;
varying POS3 sp;

const float fogNear = 0.9;

const vec3 inverseLightDirection = vec3(0.62, 0.78, 0.0);
const float ambient = 0.7;

float calc3dClouds(vec2 a){
  float ca = sin(a.x + a.y);
  float cb = cos(a.y-a.x*cos(a.y));

  float cc = sin(a.x*0.1);
  return max(0.0, ca-cb-cc-0.4)*0.3;
}

void main()
{

sp = vec3(10000.0);

vec4 cloud = vec4(1.0);

cloud.a = calc3dClouds(POSITION.xz*0.5);

POS4 pos = WORLDVIEWPROJ * vec4(POSITION.x, POSITION.y-cloud.a, POSITION.z, POSITION.w);
 	gl_Position = pos;

color = cloud;

}